// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `server.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Player;

public interface ServerPrx extends Ice.ObjectPrx
{
    public void addSong(String name, String artist, String path);

    public void addSong(String name, String artist, String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addSong(String name, String artist, String path);

    public Ice.AsyncResult begin_addSong(String name, String artist, String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addSong(String name, String artist, String path, Ice.Callback __cb);

    public Ice.AsyncResult begin_addSong(String name, String artist, String path, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addSong(String name, String artist, String path, Callback_Server_addSong __cb);

    public Ice.AsyncResult begin_addSong(String name, String artist, String path, java.util.Map<String, String> __ctx, Callback_Server_addSong __cb);

    public void end_addSong(Ice.AsyncResult __result);

    public void remove(String path);

    public void remove(String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_remove(String path);

    public Ice.AsyncResult begin_remove(String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_remove(String path, Ice.Callback __cb);

    public Ice.AsyncResult begin_remove(String path, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_remove(String path, Callback_Server_remove __cb);

    public Ice.AsyncResult begin_remove(String path, java.util.Map<String, String> __ctx, Callback_Server_remove __cb);

    public void end_remove(Ice.AsyncResult __result);

    public song[] findByTitle(String name);

    public song[] findByTitle(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByTitle(String name);

    public Ice.AsyncResult begin_findByTitle(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByTitle(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByTitle(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByTitle(String name, Callback_Server_findByTitle __cb);

    public Ice.AsyncResult begin_findByTitle(String name, java.util.Map<String, String> __ctx, Callback_Server_findByTitle __cb);

    public song[] end_findByTitle(Ice.AsyncResult __result);

    public song[] findByArtist(String artist);

    public song[] findByArtist(String artist, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByArtist(String artist);

    public Ice.AsyncResult begin_findByArtist(String artist, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByArtist(String artist, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByArtist(String artist, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByArtist(String artist, Callback_Server_findByArtist __cb);

    public Ice.AsyncResult begin_findByArtist(String artist, java.util.Map<String, String> __ctx, Callback_Server_findByArtist __cb);

    public song[] end_findByArtist(Ice.AsyncResult __result);

    public song[] list();

    public song[] list(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_list();

    public Ice.AsyncResult begin_list(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_list(Ice.Callback __cb);

    public Ice.AsyncResult begin_list(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_list(Callback_Server_list __cb);

    public Ice.AsyncResult begin_list(java.util.Map<String, String> __ctx, Callback_Server_list __cb);

    public song[] end_list(Ice.AsyncResult __result);

    public String start(String path);

    public String start(String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_start(String path);

    public Ice.AsyncResult begin_start(String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_start(String path, Ice.Callback __cb);

    public Ice.AsyncResult begin_start(String path, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_start(String path, Callback_Server_start __cb);

    public Ice.AsyncResult begin_start(String path, java.util.Map<String, String> __ctx, Callback_Server_start __cb);

    public String end_start(Ice.AsyncResult __result);

    public void play(String id);

    public void play(String id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_play(String id);

    public Ice.AsyncResult begin_play(String id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_play(String id, Ice.Callback __cb);

    public Ice.AsyncResult begin_play(String id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_play(String id, Callback_Server_play __cb);

    public Ice.AsyncResult begin_play(String id, java.util.Map<String, String> __ctx, Callback_Server_play __cb);

    public void end_play(Ice.AsyncResult __result);

    public void stop(String id);

    public void stop(String id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stop(String id);

    public Ice.AsyncResult begin_stop(String id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stop(String id, Ice.Callback __cb);

    public Ice.AsyncResult begin_stop(String id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stop(String id, Callback_Server_stop __cb);

    public Ice.AsyncResult begin_stop(String id, java.util.Map<String, String> __ctx, Callback_Server_stop __cb);

    public void end_stop(Ice.AsyncResult __result);
}
